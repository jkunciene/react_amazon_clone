[{"/home/jolita/Documents/amazon_clone/src/index.js":"1","/home/jolita/Documents/amazon_clone/src/App.js":"2","/home/jolita/Documents/amazon_clone/src/components/header/Header.js":"3","/home/jolita/Documents/amazon_clone/src/components/home/Home.js":"4","/home/jolita/Documents/amazon_clone/src/components/product/Product.js":"5","/home/jolita/Documents/amazon_clone/src/firebase.js":"6","/home/jolita/Documents/amazon_clone/src/components/checkout/Checkout.js":"7","/home/jolita/Documents/amazon_clone/src/components/subtotal/Subtotal.js":"8","/home/jolita/Documents/amazon_clone/src/components/StateProvider.js":"9","/home/jolita/Documents/amazon_clone/src/components/reducer.js":"10","/home/jolita/Documents/amazon_clone/src/components/checkoutProduct/CheckoutProduct.js":"11","/home/jolita/Documents/amazon_clone/src/components/login/Login.js":"12","/home/jolita/Documents/amazon_clone/src/components/payment/Payment.js":"13","/home/jolita/Documents/amazon_clone/src/components/axios.js":"14","/home/jolita/Documents/amazon_clone/src/components/orders/Orders.js":"15","/home/jolita/Documents/amazon_clone/src/components/order/Order.js":"16"},{"size":415,"mtime":1611048772103,"results":"17","hashOfConfig":"18"},{"size":1993,"mtime":1612005123181,"results":"19","hashOfConfig":"18"},{"size":2302,"mtime":1612005349171,"results":"20","hashOfConfig":"18"},{"size":2054,"mtime":1611502666434,"results":"21","hashOfConfig":"18"},{"size":1284,"mtime":1611213057014,"results":"22","hashOfConfig":"18"},{"size":572,"mtime":1611855320727,"results":"23","hashOfConfig":"18"},{"size":1194,"mtime":1611495678959,"results":"24","hashOfConfig":"18"},{"size":1244,"mtime":1611500619953,"results":"25","hashOfConfig":"18"},{"size":472,"mtime":1611047456913,"results":"26","hashOfConfig":"18"},{"size":1250,"mtime":1611851754524,"results":"27","hashOfConfig":"18"},{"size":1313,"mtime":1612004973472,"results":"28","hashOfConfig":"18"},{"size":2062,"mtime":1611492782029,"results":"29","hashOfConfig":"18"},{"size":5928,"mtime":1612025462511,"results":"30","hashOfConfig":"18"},{"size":189,"mtime":1612022618640,"results":"31","hashOfConfig":"18"},{"size":1142,"mtime":1612003075005,"results":"32","hashOfConfig":"18"},{"size":1453,"mtime":1612005021824,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1h6mesr",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/jolita/Documents/amazon_clone/src/index.js",[],["75","76"],"/home/jolita/Documents/amazon_clone/src/App.js",["77","78"],"import React, {useEffect} from 'react'\nimport './app.css'\nimport Header from './components/header/Header'\nimport Home from './components/home/Home'\nimport Checkout from './components/checkout/Checkout';\nimport {useStateValue} from \"./components/StateProvider\"\nimport {loadStripe} from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './components/login/Login';\nimport { auth } from './firebase';\nimport Payment from './components/payment/Payment';\nimport Orders from './components/orders/Orders';\n\nconst promise = loadStripe(\n  \"pk_test_51IDXp3LfME8Q3ekweweyb14hh91QC5XWo9x1PfkLPaalBTqtcTU47aM50IE2mxA0gxYq5nypaVL5AatZXhcrQa5300FFLu0tO9\"\n)\n\n\nfunction App() {\n\n       const [{}, dispatch] = useStateValue();\n\n\n  //will only run once when the app component loads\n  useEffect(()=>{\n    auth.onAuthStateChanged(authUser => {\n      console.log('THE USER IS >>> ', authUser)\n\n      if(authUser){\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser\n        })\n\n      } else {\n        // the user is logged out\n\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n\n      }\n    })\n  }, [])\n\n  return (    \n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/orders\">\n            <Header/>\n            <Orders/>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/checkout\">\n            <Header/>\n            <Checkout />\n          </Route>\n          <Route path=\"/payment\">\n            <Header/>\n            <Elements stripe={promise}>\n                 <Payment/>  \n            </Elements>                     \n          </Route>\n          <Route path=\"/\">\n            <Header/>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>  \n  );\n}\n\nexport default App;\n","/home/jolita/Documents/amazon_clone/src/components/header/Header.js",["79"],"import React from 'react'\nimport './header.css'\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\"\nimport {Link} from \"react-router-dom\"\nimport {useStateValue} from \"../StateProvider\"\nimport { auth } from '../../firebase'\n\nconst Header = () => {\n    const [{basket, user}, dispatch] = useStateValue();\n\n    const handleAutenticaton = () => {\n            if (user) {\n                    auth.signOut();\n            }\n    }\n    return (\n        <div className='header'>\n            <Link to=\"/\">\n                 <img \n                className='header_logo'\n                src='https://pngimg.com/uploads/amazon/amazon_PNG11.png' \n                alt='amazon logo'\n            />\n            </Link>\n           \n            <div className='header_search'>\n                <input\n                className='header_searchInput' type='text'/>\n               <SearchIcon className='header_searchIcon'/>\n            </div>\n\n            <div className='header_nav'>\n                <Link to={!user && '/login'}>\n                <div onClick={handleAutenticaton} className='header_option'>\n                    <span className='header_optionLineOne'>Hello {user?.email || \"Guest\"}</span>\n                    <span className='header_optionLineTwo'>{user ? 'Sign out': 'Sign In'}</span>\n                </div>\n                </Link>\n                <Link to='/orders'>\n                 <div className='header_option'>\n                    <span className='header_optionLineOne'>Returns</span>\n                    <span className='header_optionLineTwo'>& Orders</span>\n                </div>\n                </Link>\n                 <div className='header_option'>\n                    <span className='header_optionLineOne'>Your</span>\n                    <span className='header_optionLineTwo'>Prime</span>\n                </div>\n                <Link to=\"/checkout\">\n                    <div className='header_optionBasket'>\n                    <ShoppingBasketIcon/>\n                    <span className='header_optionLineTwo header_basketCount'>\n                        {basket?.length}\n                    </span>\n                </div>\n                </Link>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","/home/jolita/Documents/amazon_clone/src/components/home/Home.js",[],"/home/jolita/Documents/amazon_clone/src/components/product/Product.js",[],"/home/jolita/Documents/amazon_clone/src/firebase.js",[],"/home/jolita/Documents/amazon_clone/src/components/checkout/Checkout.js",["80"],"import React from 'react'\nimport foto from \"../../img/small.jpg\";\n\nimport Subtotal from '../subtotal/Subtotal';\nimport './checkout.css'\n\nimport {useStateValue} from '../StateProvider'\nimport CheckoutProduct from '../checkoutProduct/CheckoutProduct'\n\nconst Checkout = () => {\n    const [{basket, user}, dispatch] = useStateValue();\n\n    return (\n        <div className='checkout'>\n            <div className='checkout_left'>\n                <img className='checkout_ad' src={foto} alt='one product'/>\n                <div>\n                    <h3>{user?.email}</h3>\n                    <h2 className='checkout_title'>Your shopping Basket</h2>\n\n                    {basket.map(item => (\n                        <CheckoutProduct \n                            id={item.id}\n                            title={item.title}\n                            image={item.image}\n                            price={item.price}\n                            rating={item.rating}\n                        />\n                    ))}\n\n\n\n                </div>\n            </div>\n            <div className='checkout_right'>\n                <Subtotal/>\n            </div>\n        </div>\n    )\n}\n\nexport default Checkout\n","/home/jolita/Documents/amazon_clone/src/components/subtotal/Subtotal.js",["81"],"import React from 'react'\nimport './subtotal.css'\nimport CurrencyFormat from 'react-currency-format';\nimport {useStateValue} from '../StateProvider'\nimport { getBasketTotal } from '../reducer';\nimport { useHistory } from 'react-router-dom';\n\nconst Subtotal = () => {\n    const history = useHistory();\n    const [{basket}, dispatch] = useStateValue();\n\n    return (\n        <div className=\"subtotal\">\n            <CurrencyFormat\n                renderText={(value) =>(\n                    <>\n                        <p>\n                            Subtotal ({basket.length} items):\n                            <strong>{value}</strong>\n                        </p>\n                        <small className=\"subtotal_gift\">\n                            <input type=\"checkbox\"/>\n                            This order contains a gift\n                        </small>\n                    </>\n                )}\n                decimalScale={2}\n                value={getBasketTotal(basket)}\n                displayType={'text'}\n                thousandSeperator={true}\n                prefix={'$'}\n            />\n            <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\n        </div>\n    )\n}\n\nexport default Subtotal\n","/home/jolita/Documents/amazon_clone/src/components/StateProvider.js",[],"/home/jolita/Documents/amazon_clone/src/components/reducer.js",[],"/home/jolita/Documents/amazon_clone/src/components/checkoutProduct/CheckoutProduct.js",["82","83"],"import React from 'react'\nimport './checkoutProduct.css'\nimport { useStateValue } from \"../StateProvider\";\n\nconst CheckoutProduct = ({id, title, image, price, rating, hideButton})  => {\n     const [{basket}, dispatch] = useStateValue();\n\n     const removeFromBasket = () => {\n         //remove the item from the basket\n         dispatch({\n             type: 'REMOVE_FROM_BASKET',\n             id: id,\n         })\n     }\n\n    return (\n        <div className=\"checkoutProduct\">\n            <img className='checkoutProduct_image' src={image}/>\n            <div className='checkoutProduct_info'>\n                <p className='checkoutProduct_title'>{title}</p>\n                <p className='checkoutProduct_price'>\n                    <small>$</small>\n                    <strong>{price}</strong>\n                </p>\n                <div className='checkoutProduct_rating'>\n                   \n                    {Array(rating)\n                    .fill()\n                    .map((_, i) => (\n                        <p>⭐</p>\n                    ))}\n                </div>\n                {!hideButton && (\n                    <button onClick={removeFromBasket}>Remove from basket</button>\n                )}\n                \n            </div>\n            \n        </div>\n    )\n}\n\nexport default CheckoutProduct\n","/home/jolita/Documents/amazon_clone/src/components/login/Login.js",["84"],"import React, {useState} from 'react'\nimport './login.css'\nimport logo from '../../img/logo.svg.png'\nimport { Link, useHistory } from 'react-router-dom'\nimport { auth } from '../../firebase'\n\n\nconst Login = () => {\n\n    const history = useHistory();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const signIn = e => {\n        e.preventDefault();\n\n        auth\n            \n            .signInWithEmailAndPassword(email, password)\n            .then(auth =>{\n                history.push('/')\n            })\n            .catch(error => alert(console.error.message))\n\n    }\n\n    const register = e => {\n        e.preventDefault()\n\n        auth\n        .createUserWithEmailAndPassword(email, password)\n        //it successfully created a new user wiht email and passwd\n        .then((auth) =>{\n            //console.log(auth);\n            if(auth){\n                history.push('/')\n            }\n        })\n        .catch(error => alert(error.message))\n       \n    }\n\n\n    return (\n        <div className='login'>\n            <Link to='/'>\n                <img \n                    className='login_logo'\n                    src={logo}\n                />\n            </Link>\n\n            <div className='login_container'>\n                <h1>Sign-in</h1>\n\n                <form>\n                    <h5>E-mail</h5>\n                    <input type='text' value={email} onChange={e => setEmail(e.target.value)}/>\n\n                    <h5>Password</h5>\n                    <input type='password' value={password} onChange={e => setPassword(e.target.value)}/>\n\n                    <button type='submit' onClick={signIn}\n                    className='login_signInButton'>Sign In</button>\n\n                </form>\n                <p>\n                    By signing-in you agree to MY Conditions of Use & Copy.\n                </p>\n\n                <button onClick={register}\n                className='login_registerButton'>Create new Account</button>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/home/jolita/Documents/amazon_clone/src/components/payment/Payment.js",["85"],"import React, {useEffect, useState} from 'react'\nimport './payment.css';\nimport {useStateValue} from '../StateProvider'\nimport CheckoutProduct from '../checkoutProduct/CheckoutProduct';\nimport {Link, useHistory} from \"react-router-dom\"\nimport { CardElement, useStripe, useElements  } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from '../reducer';\nimport axios from '../axios';\nimport { db } from '../../firebase';\n\n\n\n\nconst Payment = () => {\n\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        // generate the special stripe secret which allows us to charge a customer\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                // Stripe expects the total in a currencies subunits\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log('THE SECRET IS >>>', clientSecret)\n    console.log('👱', user)\n\n    const handleSubmit = async (event) => {\n        // do all the fancy stripe stuff...\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n\n            db\n              .collection('users')\n              .doc(user?.uid)\n              .collection('orders')\n              .doc(paymentIntent.id)\n              .set({\n                  basket: basket,\n                  amount: paymentIntent.amount,\n                  created: paymentIntent.created\n              })\n\n            setSucceeded(true);\n            setError(null)\n            setProcessing(false)\n\n            dispatch({\n                type: 'EMPTY_BASKET'\n            })\n\n            history.replace('/orders')\n        })\n\n    }\n\n    const handleChange = event => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n\n    return (\n        <div className='payment'>\n            <div className='payment_container'>\n                <h1>\n                    Checkout (\n                        <Link to=\"/checkout\">{basket?.length} items</Link>\n                        )\n                </h1>\n\n\n                {/* Payment section - delivery address */}\n                <div className='payment_section'>\n                    <div className='payment_title'>\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className='payment_address'>\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Los Angeles, CA</p>\n                    </div>\n                </div>\n\n                {/* Payment section - Review Items */}\n                <div className='payment_section'>\n                    <div className='payment_title'>\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className='payment_items'>\n                        {basket.map(item => (\n                            <CheckoutProduct\n                                id={item.id}\n                                title={item.title}\n                                image={item.image}\n                                price={item.price}\n                                rating={item.rating}\n                            />\n                        ))}\n                    </div>\n                </div>\n            \n\n                {/* Payment section - Payment method */}\n                <div className='payment_section'>\n                    <div className=\"payment_title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment_details\">\n                            {/* Stripe magic will go */}\n\n                            <form onSubmit={handleSubmit}>\n                                <CardElement onChange={handleChange}/>\n\n                                <div className='payment_priceContainer'>\n                                    <CurrencyFormat\n                                        renderText={(value) => (\n                                            <h3>Order Total: {value}</h3>\n                                        )}\n                                        decimalScale={2}\n                                        value={getBasketTotal(basket)}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"$\"}\n                                    />\n                                    <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                    </button>\n                                </div>\n\n                                  {/* Errors */}\n                                {error && <div>{error}</div>}\n                            </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n","/home/jolita/Documents/amazon_clone/src/components/axios.js",[],"/home/jolita/Documents/amazon_clone/src/components/orders/Orders.js",["86","87"],"import React, { useState, useEffect } from 'react';\nimport { db } from '../../firebase';\nimport { useStateValue } from '../StateProvider';\nimport './orders.css';\nimport Order from '../order/Order'\n\nconst Orders = () => {\n\n    const [orders, setOrders] = useState([]);\n    const [{ basket, user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n\n        if(user){\n\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .orderBy('created', 'desc')\n                .onSnapshot(snapshot=>(\n                          setOrders(snapshot.docs.map( doc => ({\n                    id: doc.id,\n                    data: doc.data()\n                })))\n              \n                ))\n        } else {\n            setOrders([])\n        }\n    }, [user])\n    return (\n        <div className='orders'>\n            <h1>Yuor Orders</h1>\n\n            <div className='orders_order'>\n                {orders?.map(order => (\n                    <Order order={order} />\n                ))\n\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Orders\n","/home/jolita/Documents/amazon_clone/src/components/order/Order.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":27,"column":15,"nodeType":"94","messageId":"95","endLine":27,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":53,"column":6,"nodeType":"98","endLine":53,"endColumn":8,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":28,"nodeType":"102","messageId":"103","endLine":10,"endColumn":36},{"ruleId":"100","severity":1,"message":"101","line":11,"column":28,"nodeType":"102","messageId":"103","endLine":11,"endColumn":36},{"ruleId":"100","severity":1,"message":"101","line":10,"column":22,"nodeType":"102","messageId":"103","endLine":10,"endColumn":30},{"ruleId":"100","severity":1,"message":"104","line":6,"column":14,"nodeType":"102","messageId":"103","endLine":6,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":18,"column":13,"nodeType":"107","endLine":18,"endColumn":65},{"ruleId":"105","severity":1,"message":"106","line":47,"column":17,"nodeType":"107","endLine":50,"endColumn":19},{"ruleId":"100","severity":1,"message":"108","line":51,"column":15,"nodeType":"102","messageId":"103","endLine":51,"endColumn":22},{"ruleId":"100","severity":1,"message":"104","line":10,"column":14,"nodeType":"102","messageId":"103","endLine":10,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":10,"column":30,"nodeType":"102","messageId":"103","endLine":10,"endColumn":38},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch]",{"range":"114","text":"115"},[1308,1310],"[dispatch]"]